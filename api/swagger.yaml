swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Youth Speak Hawaii'
  description: 'This is voluntary association'
  contact:
    email: "leosmile38@gmail.com"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "youthspeakshawaii.herokuapp.com"
#host: "localhost:3000"
basePath: "/v2"

schemes:
  - "https"
  - "http"

tags:
  - name: "event"
    description: "Events scheduled"
  - name: "activity"
    description: "Activities offered"
  - name: "contact"
    description: "Volunteers"

    # book -> event
    # event -> activity
    # author -> contact

paths:
  /events:
    get:
      tags:
        - "event"
      summary: "Events scheduled"
      description: "List of events scheduled"
      operationId: "eventsGET"
      produces:
        - "application/json"
      parameters:
        - name: "limit"
          in: "query"
          description: "max number of events"
          type: "integer"
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0"
          type: "integer"
      responses:
        '200':
          description: "Collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
      x-swagger-router-controller: "Event"

  /events/{id}:
    get:
      tags:
        - "event"
      summary: "Find event with the event id"
      operationId: "eventIdGET"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the event you are searching"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "operation was successful"
          schema:
            $ref: '#/definitions/Event'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
      x-swagger-router-controller: "Event"

  /events/{id}/contact:
    get:
      tags:
        - "event"
      summary: "Get the contact of an event"
      operationId: "eventsIdContactGET"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the event you want the contact of"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/Contact'
      x-swagger-router-controller: "Event"

  /events/{id}/activity:
    get:
      tags:
        - "event"
      summary: "Get the activity of an event"
      operationId: "eventsIdActivityGET"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the event you want the activity of"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/Activity'

      x-swagger-router-controller: "Event"

      # /events/{id}/similar:
      #   get:
      #     tags:
      #       - "book"
      #     summary: "Get similar books to the chosen one"
      #     operationId: "booksIdSimilarGET"
      #     parameters:
      #       - name: "id"
      #         in: "path"
      #         description: "id of the book you want the similars of"
      #         required: true
      #         type: "integer"
      #         format: "int64"
      #     responses:
      #       '200':
      #         description: "successful operation"
      #         schema:
      #           $ref: '#/definitions/Book'
      #     x-swagger-router-controller: "Book"

  # /books/themes:
  #   get:
  #     tags:
  #       - "book"
  #     summary: "Get all the themes that are present"
  #     operationId: "booksThemesGET"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "All themes"
  #     x-swagger-router-controller: "Book"

  # /books/themes/{theme}:
  #   get:
  #     tags:
  #       - "book"
  #     summary: "Get books with a given theme"
  #     operationId: "booksByThemeGET"
  #     parameters:
  #       - name: "theme"
  #         in: "path"
  #         description: "theme of the book you want"
  #         required: true
  #         type: "string"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "successful operation"
  #     x-swagger-router-controller: "Book"

  # /books/genres:
  #   get:
  #     tags:
  #       - "book"
  #     summary: "Get all the genres that are present"
  #     operationId: "booksGenresGET"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "successful operation"
  #     x-swagger-router-controller: "Book"

  # /books/genres/{genre}:
  #   get:
  #     tags:
  #       - "book"
  #     summary: "Get books with a given genre"
  #     operationId: "booksByGenreGET"
  #     parameters:
  #       - name: "genre"
  #         in: "path"
  #         description: "genre of the book you want"
  #         required: true
  #         type: "string"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "successful operation"
  #         schema:
  #           type: "array"
  #           items:
  #             $ref: "#/definitions/Book"
  #     x-swagger-router-controller: "Book"

  /activities:
    get:
      tags:
        - "activity"
      summary: "Activities related to an event"
      description: "List of all the activities"
      operationId: "activitiesGET"
      produces:
        - "application/json"
      responses:
        '200':
          description: "Collection of activities"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Activity"
      x-swagger-router-controller: "Activity"

  /activities/{id}:
    get:
      tags:
        - "activity"
      summary: "Find activity with the activity id"
      operationId: "activityIdGET"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the activity you are searching"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "operation was successful"
          schema:
            $ref: '#/definitions/Activity'
      x-swagger-router-controller: "Activity"
  /activities/{id}/event:
    get:
      tags:
        - "activity"
      summary: "Get the event of an activity"
      operationId: "activitiesIdEventGET"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the activity you want the event of"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/Event'
      x-swagger-router-controller: "Activity"
  /activities/{id}/contact:
    get:
      tags:
        - "activity"
      summary: "Get the contact of an activity"
      operationId: "activitiesIdContactGET"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the activity you want the contact of"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/Contact'
      x-swagger-router-controller: "Activity"

  /contacts:
    get:
      tags:
        - "contact"
      summary: "Finds contacts"
      description: "Get contact"
      operationId: "contactsGET"
      produces:
        - "application/json"
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
      x-swagger-router-controller: "Contact"

  /contacts/{id}:
    get:
      tags:
        - "contact"
      summary: "Find contacts by ID"
      operationId: "contactIdGET"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id to get the contact"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            $ref: '#/definitions/Contact'
      x-swagger-router-controller: "Contact"

  /contacts/{id}/events:
    get:
      tags:
        - "contact"
      summary: "Get the events of a contact"
      operationId: "contactsIdEventsGET"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of contact of which to get the events"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Event'
      x-swagger-router-controller: "Contact"

  /contacts/{id}/activity:
    get:
      tags:
        - "contact"
      summary: "Get the activities of a contact"
      operationId: "contactsIdActivityGET"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of contact of which to get the activities"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Activity'
      x-swagger-router-controller: "Contact"

  # /user/login:
  #   post:
  #     tags:
  #       - "user"
  #     summary: "Login"
  #     description: "Login with a form"
  #     operationId: "userLoginPOST"
  #     consumes:
  #       - "application/x-www-form-urlencoded"
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - name: "email"
  #         in: "formData"
  #         required: true
  #         type: "string"
  #       - name: "password"
  #         in: "formData"
  #         required: true
  #         type: "string"
  #     responses:
  #       200:
  #         description: "login status"
  #     x-swagger-router-controller: "User"

  # /user/register:
  #   post:
  #     tags:
  #       - "user"
  #     summary: "Register"
  #     description: "Register into the store"
  #     operationId: "userRegisterPOST"
  #     consumes:
  #       - "application/x-www-form-urlencoded"
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - name: "email"
  #         in: "formData"
  #         required: true
  #         type: "string"
  #       - name: "password"
  #         in: "formData"
  #         required: true
  #         type: "string"
  #     responses:
  #       200:
  #         description: "registration status"
  #     x-swagger-router-controller: "User"

  # /users/books:
  #   get:
  #     tags:
  #       - "user"
  #     summary: "Get the cart of the currently logged user"
  #     operationId: "usersIdCartGET"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "successful operation"
  #         schema:
  #           $ref: '#/definitions/Book'
  #     x-swagger-router-controller: "User"

  #   delete:
  #     tags:
  #       - "user"
  #     summary: "Delete the cart of the current logged in user"
  #     operationId: "usersIdCartDELETE"
  #     produces:
  #       - "application/json"
  #     responses:
  #       '200':
  #         description: "operation status"
  #     x-swagger-router-controller: "User"

  # /users/books/{id}:
  #   delete:
  #     tags:
  #       - "user"
  #     summary: "Decrease the quantity of the given"
  #     operationId: "usersIdCartBookDELETE"
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - name: "id"
  #         in: "path"
  #         description: "id of the book to decrease the qunatity"
  #         required: true
  #         type: "integer"
  #         format: "int64"
  #     responses:
  #       '200':
  #         description: "operation status"
  #     x-swagger-router-controller: "User"


  # /users/logout:
  #   get:
  #     tags:
  #       - "user"
  #     summary: "Logs out current logged in user session"
  #     description: ""
  #     operationId: "userLogoutGET"
  #     produces:
  #       - "application/json"
  #     parameters: []
  #     responses:
  #       default:
  #         description: "logout status"
  #     x-swagger-router-controller: "User"

  # /users/logged:
  #   get:
  #     tags:
  #       - "user"
  #     summary: "Logged user"
  #     description: "Gives the currently logged user"
  #     operationId: "userIsLoggedGET"
  #     produces:
  #       - "application/json"
  #     parameters: []
  #     responses:
  #       default:
  #         description: "logged"
  #     x-swagger-router-controller: "User"

  # /user/addBook:
  #   put:
  #     tags:
  #       - "user"
  #     summary: "Adds a book to the user's cart"
  #     operationId: "userBookPUT"
  #     consumes:
  #       - "application/x-www-form-urlencoded"
  #     produces:
  #       - "application/json"
  #     parameters:
  #       - name: "books"
  #         in: "formData"
  #         description: "id of the book that the user wants"
  #         required: true
  #         type: "integer"
  #         format: "int64"
  #     responses:
  #       200:
  #         description: "operation status"
  #     x-swagger-router-controller: "User"


definitions:

  Event:
    type: "object"
    required:
      - "IDevent"
    properties:
      IDevent:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      location:
        type: "string"
      date:
        type: "string"
        format: "date"
      description:
        type: "string"
      start_time:
        type: "string"
        format: "time"
      end_time:
        type: "string"
        format: "time"
      img:
        type: "string"
      practical_info:
        type: "string"
    xml:
      name: "Event"
    title: "Event"
    description: "An event related to an activity"
    example:
      IDevent: 0
      title: "How to create a poem"
      location: "Honolulu"
      date: "2020-07-21"
      description: "Expressing your thoughts"
      start_time: "16:00"
      end_time: "18:00"
      img: "EV01.jpg"
      practical info: "In the first part of this event we'll explain the theory behind poetry composition while the second part is hands-on."


  # Book:
  #   type: "object"
  #   required:
  #     - "id"
  #     - "title"
  #     - "date"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     title:
  #       type: "string"
  #     price:
  #       type: "number"
  #       format: "double"
  #     isbn:
  #       type: "string"
  #     genre:
  #       type: "string"
  #     quantity:
  #       type: "integer"
  #       format: "int32"
  #     description:
  #       type: "string"
  #     publisher:
  #       type: "string"
  #     language:
  #       type: "string"
  #     release:
  #       type: "string"
  #       format: "date"
  #     field:
  #       type: "string"
  #     theme:
  #       type: "string"

  #   xml:
  #     name: "Book"
  #   title: "Book"
  #   description: "A book for sale in the store"
  #   example:
  #     id: 0
  #     title: "Harry Potter 1"
  #     price: 10
  #     isbn: "9780747532743"
  #     genre: "fantasy"
  #     quantity: 3
  #     publisher: "Bloomsbury Publishing"
  #     language: "english"
  #     release: "1997-06-26"
  #     field: "Wizardry"
  #     theme: "Harry Potter Exhibition"

  Activity:
    type: "object"
    required:
      - "IDactivity"
      - "title"
    properties:
      IDactivity:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      practical_info:
        type: "string"
    xml:
      name: "Activity"
    title: "Activity"
    description: "An activity related to an event"
    example:
      IDactivity: 0
      title: "Poetry 101"
      description: "Helping children to create short poems"
      practical_info: "The difficulty level of this activity is low, since it is meant for beginners"


  Contact:
    type: "object"
    required:
      - "IDperson"
    properties:
      IDperson:
        type: "integer"
        format: "int64"
      full_name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      bio:
        type: "string"
      img:
        type: "string"
    xml:
      name: "Contact"
    description: "Volunteer"
    example:
      IDperson: 5
      full_name: "Jason Momoa"
      email: "j_momoa@gmail.com"
      phone: "8014562357"
      bio: "Actor and activist"
      img: "J01.jpg"

  # User:
  #   type: "object"
  #   required:
  #     - "email"
  #     - "password"
  #   properties:
  #     email:
  #       type: "string"
  #     password:
  #       type: "string"
  #   xml:
  #     name: "User"
  #   example:
  #     email: "harry.potter@gmail.com"
  #     password: "wingardiumleviosa"